#cloud-config

users:
  - name: skydns
    system: true
coreos:
  update:
    reboot-strategy: etcd-lock
  fleet:
    metadata: public_ip=$public_ipv4,region=us-west-2,instance_type=m3.medium
    public-ip: $private_ipv4
  etcd:
    discovery: https://discovery.etcd.io/cb98ff0f99ac07d53d84d2636305c36e
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      content: |
        .include /usr/lib/systemd/system/docker.service
        
        [Service]
        ExecStart=
        ExecStart=/usr/bin/docker -d -s=btrfs -r=false -H fd:// --dns=172.17.42.1 --dns-search=cluster.local
    - name: extended-environment.install.service
      command: start
      content: |
        [Unit]
        Description=Extended environment installer
        
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/bash -c 'echo "EC2_INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" | sudo tee -a /etc/environment'
    - name: skydns.install.service
      command: start
      content: |
        [Unit]
        Description=SkyDNS Installer
        
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=-/usr/bin/mkdir -p /var/lib/skydns/bin
        ExecStart=-/usr/bin/curl -s -o /var/lib/skydns/bin/skydns https://coreos-beta.s3.amazonaws.com/skydns
        ExecStart=/usr/bin/chown -R skydns:skydns /var/lib/skydns
        ExecStart=/usr/bin/chmod 755 /var/lib/skydns/bin/skydns
    - name: skydns.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=skydns
        Requires=skydns.install.service
        Wants=etcd.service
        Requires=docker.service
        After=skydns.install.service
        After=etcd.service
        After=docker.service
        
        [Service]
        Type=simple
        User=skydns
        Group=skydns
        Restart=always
        RestartSec=5
        ReadOnlyDirectories=/etc
        EnvironmentFile=/etc/environment
        
        ExecStart=/var/lib/skydns/bin/skydns -addr 172.17.42.1:5333 -verbose=true -discover=true -domain cluster.local. -local %m.hosts.cluster.local
        ExecStartPost=/usr/bin/etcdctl set /skydns/local/cluster/hosts/%m '{"host":"$private_ipv4"}'
        ExecStopPre=/usr/bin/etcdctl rm /skydns/local/cluster/hosts/%m
        
        PermissionsStartOnly=true
        # ExecStartPre=/usr/sbin/sysctl -w net.ipv4.ip_forward=1
        ExecStartPre=-/sbin/iptables -D INPUT -p udp --dport 5333 -j ACCEPT
        ExecStartPre=-/sbin/iptables -t nat -D PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5333
        ExecStartPre=/sbin/iptables -A INPUT -p udp --dport 5333 -j ACCEPT
        ExecStartPre=/sbin/iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5333
        ExecStopPost=/sbin/iptables -D INPUT -p udp --dport 5333 -j ACCEPT
        ExecStopPost=/sbin/iptables -t nat -D PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5333
        
        [Install]
        WantedBy=multi-user.target

write_files:
  - path: /etc/profile.d/alias.sh
    content: |
      alias ll='ls -l'
      alias d='docker '
      alias ds='docker ps'
      alias di='docker images'
      alias drm='docker rm -f $(docker ps -qa)'
      alias sd='sudo systemctl'
      alias cci='sudo coreos-cloudinit --from-file'
      alias j='journalctl'
      function nsa { sudo nsenter -p -u -m -i -n -t $(docker inspect -f '{{ .State.Pid }}' $1) ; }
