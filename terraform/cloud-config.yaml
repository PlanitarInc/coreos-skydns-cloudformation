coreos:
  update:
    reboot-strategy: etcd-lock
  fleet:
    <<: *FLEET_METADATA
    public-ip: $private_ipv4
  etcd:
    <<: *ETCD_DISCOVERY_URL
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      content: |
        .include /usr/lib/systemd/system/docker.service
        
        [Service]
        ExecStart=
        ExecStart=/usr/bin/docker -d -s=btrfs -r=false -H fd:// --dns=172.17.42.1 --dns-search=cluster.local
    - name: extended-environment.install.service
      command: start
      content: |
        [Unit]
        Description=AWS runtime environment installer
        
        [Service]
        Type=oneshot
        RemainAfterExit=true
        ExecStart=/bin/bash -c 'echo "EC2_INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)" | sudo tee -a /etc/aws_environment'

write_files:
  - path: /etc/aws_environment
    <<: *STATIC_AWS_ENVIRONMENT
  - path: /etc/profile.d/alias.sh
    content: |
      alias ll='ls -l'
      alias d='docker '
      alias ds='docker ps'
      alias di='docker images'
      alias drm='docker rm -f $(docker ps -qa)'
      alias sd='sudo systemctl'
      alias cci='sudo coreos-cloudinit --from-file'
      alias j='journalctl'
      function nsa { sudo nsenter -p -u -m -i -n -t $(docker inspect -f '{{ .State.Pid }}' $1) ; }
